{"remainingRequest":"/Users/Alina/Downloads/element-ui-validation-form/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alina/Downloads/element-ui-validation-form/src/components/RequestModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alina/Downloads/element-ui-validation-form/src/components/RequestModal.vue","mtime":1628171199876},{"path":"/Users/Alina/Downloads/element-ui-validation-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alina/Downloads/element-ui-validation-form/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Alina/Downloads/element-ui-validation-form/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alina/Downloads/element-ui-validation-form/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport ApiTrello from \"../api/ApiTrello.js\";\nexport default {\n  name: \"requestmodal\",\n  props: {\n    title: String,\n  },\n  data() {\n    var validateName = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.name !== \"\" && this.ruleForm.name.length < 20) {\n          callback();\n        } else {\n          callback(new Error(\"Champ obligatoire\"));\n        }\n      }\n    };\n    var validateSurname = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.surname !== \"\" && this.ruleForm.surname.length < 20) {\n          callback();\n        }\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isTrue = re.test(value);\n        if (isTrue) {\n          callback();\n        } else {\n          callback(new Error(\"Email invalide\"));\n        }\n      }\n    };\n    return {\n      dialogFormVisible: true,\n      ruleForm: {\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n      },\n      rules: {\n        name: [{ validator: validateName, trigger: \"blur\" }],\n        surname: [{ validator: validateSurname, trigger: \"blur\" }],\n        email: [{ validator: validateEmail, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          const idBoard = \"61053a4647d3750c81bdd5c6\";\n          const idList = \"61053a4647d3750c81bdd5c7\";\n          let description = `Forme: ${this.title}\\n Name: ${this.ruleForm.name}\\n Surname: ${this.ruleForm.surname}\\n E-mail: ${this.ruleForm.email}`;\n          let data = {\n            name: `La demande ${window.location.href}`,\n            desc: description,\n            idBoard: idBoard,\n            idList: idList,\n          };\n          new Promise((resolve, reject) => {\n            ApiTrello.post(\"\", data)\n              .then((response) => {\n                this.dialogFormVisible = false;\n                resolve(response);\n              })\n              .catch((error) => {\n                console.log(error);\n                reject(error);\n              });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n",{"version":3,"sources":["RequestModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RequestModal.vue","sourceRoot":"src/components","sourcesContent":["<template lang=\"pug\">\n    el-dialog(:title='title', :visible.sync='dialogFormVisible')\n        el-form(label-position='left', :model='ruleForm', :rules=\"rules\", status-icon, ref=\"ruleForm\" )\n            el-form-item(prop=\"name\")\n                el-input(v-model='ruleForm.name', placeholder=\"Nom\", autocomplete=\"off\")\n            el-form-item(prop=\"surname\")\n                el-input(v-model='ruleForm.surname', placeholder=\"Pr√©nom\", autocomplete=\"off\")\n            el-form-item(prop=\"email\")\n                el-input(v-model='ruleForm.email', placeholder=\"E-mail\", autocomplete=\"off\")\n        span.dialog-footer(slot='footer')\n            el-button(type='primary', @click='submitForm()') Envoyer\n</template>\n<script>\nimport ApiTrello from \"../api/ApiTrello.js\";\nexport default {\n  name: \"requestmodal\",\n  props: {\n    title: String,\n  },\n  data() {\n    var validateName = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.name !== \"\" && this.ruleForm.name.length < 20) {\n          callback();\n        } else {\n          callback(new Error(\"Champ obligatoire\"));\n        }\n      }\n    };\n    var validateSurname = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.surname !== \"\" && this.ruleForm.surname.length < 20) {\n          callback();\n        }\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isTrue = re.test(value);\n        if (isTrue) {\n          callback();\n        } else {\n          callback(new Error(\"Email invalide\"));\n        }\n      }\n    };\n    return {\n      dialogFormVisible: true,\n      ruleForm: {\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n      },\n      rules: {\n        name: [{ validator: validateName, trigger: \"blur\" }],\n        surname: [{ validator: validateSurname, trigger: \"blur\" }],\n        email: [{ validator: validateEmail, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          const idBoard = \"61053a4647d3750c81bdd5c6\";\n          const idList = \"61053a4647d3750c81bdd5c7\";\n          let description = `Forme: ${this.title}\\n Name: ${this.ruleForm.name}\\n Surname: ${this.ruleForm.surname}\\n E-mail: ${this.ruleForm.email}`;\n          let data = {\n            name: `La demande ${window.location.href}`,\n            desc: description,\n            idBoard: idBoard,\n            idList: idList,\n          };\n          new Promise((resolve, reject) => {\n            ApiTrello.post(\"\", data)\n              .then((response) => {\n                this.dialogFormVisible = false;\n                resolve(response);\n              })\n              .catch((error) => {\n                console.log(error);\n                reject(error);\n              });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n<style lang=\"stylus\" scoped>\n.el-button--primary\n    background-color #007f48\n    border-color #007f48\n.is-success\n    .el-checkbox__inner\n        background-color #007f48\n        border-color #007f48\n.el-form-item\n    text-align: left;\n</style>\n"]}]}