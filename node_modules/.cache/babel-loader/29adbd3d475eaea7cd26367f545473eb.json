{"remainingRequest":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/babel-loader/lib/index.js!/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alina/Downloads/apiTrello-create-card-on-the-board/src/components/FormulaireTrello.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/src/components/FormulaireTrello.vue","mtime":1628243261291},{"path":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alina/Downloads/apiTrello-create-card-on-the-board/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TrelloApi from \"../api/TrelloApi.js\";\nexport default {\n  name: \"formulairetrello\",\n  props: {\n    title: String\n  },\n  data: function data() {\n    var _this = this;\n\n    var validateName = function validateName(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (_this.ruleForm.name !== \"\" && _this.ruleForm.name.length < 20) {\n          callback();\n        } else {\n          callback(new Error(\"Champ obligatoire\"));\n        }\n      }\n    };\n\n    var validateSurname = function validateSurname(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (_this.ruleForm.surname !== \"\" && _this.ruleForm.surname.length < 20) {\n          callback();\n        }\n      }\n    };\n\n    var validateEmail = function validateEmail(rule, value, callback) {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        var isTrue = re.test(value);\n\n        if (isTrue) {\n          callback();\n        } else {\n          callback(new Error(\"Email invalide\"));\n        }\n      }\n    };\n\n    return {\n      dialogFormVisible: true,\n      ruleForm: {\n        name: \"\",\n        surname: \"\",\n        email: \"\"\n      },\n      rules: {\n        name: [{\n          validator: validateName,\n          trigger: \"blur\"\n        }],\n        surname: [{\n          validator: validateSurname,\n          trigger: \"blur\"\n        }],\n        email: [{\n          validator: validateEmail,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      var _this2 = this;\n\n      this.$refs.ruleForm.validate(function (valid) {\n        if (valid) {\n          var idBoard = \"61053a4647d3750c81bdd5c6\";\n          var idList = \"61053a4647d3750c81bdd5c7\";\n          var description = \"Forme: \".concat(_this2.title, \"\\n Name: \").concat(_this2.ruleForm.name, \"\\n Surname: \").concat(_this2.ruleForm.surname, \"\\n E-mail: \").concat(_this2.ruleForm.email);\n          var data = {\n            name: \"New Card is here\",\n            desc: description,\n            idBoard: idBoard,\n            idList: idList\n          };\n          new Promise(function (resolve, reject) {\n            TrelloApi.post(\"\", data).then(function (response) {\n              _this2.dialogFormVisible = false;\n              resolve(response);\n            }).catch(function (error) {\n              console.log(error);\n              reject(error);\n            });\n          });\n        } else {\n          return false;\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["FormulaireTrello.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang=\"pug\">\n    el-dialog(:title='title', :visible.sync='dialogFormVisible')\n        el-form(label-position='left', :model='ruleForm', :rules=\"rules\", status-icon, ref=\"ruleForm\" )\n            el-form-item(prop=\"name\")\n                el-input(v-model='ruleForm.name', placeholder=\"Nom\", autocomplete=\"off\")\n            el-form-item(prop=\"surname\")\n                el-input(v-model='ruleForm.surname', placeholder=\"Pr√©nom\", autocomplete=\"off\")\n            el-form-item(prop=\"email\")\n                el-input(v-model='ruleForm.email', placeholder=\"E-mail\", autocomplete=\"off\")\n        span.dialog-footer(slot='footer')\n            el-button(type='primary', @click='submitForm()') Envoyer\n</template>\n<script>\nimport TrelloApi from \"../api/TrelloApi.js\";\nexport default {\n  name: \"formulairetrello\",\n  props: {\n    title: String,\n  },\n  data() {\n    var validateName = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.name !== \"\" && this.ruleForm.name.length < 20) {\n          callback();\n        } else {\n          callback(new Error(\"Champ obligatoire\"));\n        }\n      }\n    };\n    var validateSurname = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        if (this.ruleForm.surname !== \"\" && this.ruleForm.surname.length < 20) {\n          callback();\n        }\n      }\n    };\n    var validateEmail = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"Champ obligatoire\"));\n      } else {\n        let re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n        const isTrue = re.test(value);\n        if (isTrue) {\n          callback();\n        } else {\n          callback(new Error(\"Email invalide\"));\n        }\n      }\n    };\n    return {\n      dialogFormVisible: true,\n      ruleForm: {\n        name: \"\",\n        surname: \"\",\n        email: \"\",\n      },\n      rules: {\n        name: [{ validator: validateName, trigger: \"blur\" }],\n        surname: [{ validator: validateSurname, trigger: \"blur\" }],\n        email: [{ validator: validateEmail, trigger: \"blur\" }],\n      },\n    };\n  },\n  methods: {\n    submitForm() {\n      this.$refs.ruleForm.validate((valid) => {\n        if (valid) {\n          const idBoard = \"61053a4647d3750c81bdd5c6\";\n          const idList = \"61053a4647d3750c81bdd5c7\";\n          let description = `Forme: ${this.title}\\n Name: ${this.ruleForm.name}\\n Surname: ${this.ruleForm.surname}\\n E-mail: ${this.ruleForm.email}`;\n          let data = {\n            name: `New Card is here`,\n            desc: description,\n            idBoard: idBoard,\n            idList: idList,\n          };\n          new Promise((resolve, reject) => {\n            TrelloApi.post(\"\", data)\n              .then((response) => {\n                this.dialogFormVisible = false;\n                resolve(response);\n              })\n              .catch((error) => {\n                console.log(error);\n                reject(error);\n              });\n          });\n        } else {\n          return false;\n        }\n      });\n    },\n  },\n};\n</script>\n<style lang=\"stylus\" scoped>\n.el-button--primary\n    background-color #007f48\n    border-color #007f48\n.is-success\n    .el-checkbox__inner\n        background-color #007f48\n        border-color #007f48\n.el-form-item\n    text-align: left;\n</style>\n"],"sourceRoot":"src/components"}]}